/// This code was AUTOGENERATED using the codama library.
/// Please DO NOT EDIT THIS FILE, instead use visitors
/// to add features, then rerun codama to update it.
///
/// https://github.com/codama-idl/codama
///

import 'dart:typed_data';
import '../shared.dart';

/// Generated type definition for MetadataAdditionalFieldRestriction.
///
/// Inner enum for the MetadataAdditionalFieldRestriction enum.
/// * Includes - The field must include one of the values in the vector.
/// * Excludes - The field must not include any of the values in the vector.

abstract class MetadataAdditionalFieldRestriction {}

class Includes extends MetadataAdditionalFieldRestriction {
  final List<String> value0;

  Includes(this.value0);
}

class Excludes extends MetadataAdditionalFieldRestriction {
  final List<String> value0;

  Excludes(this.value0);
}

/// Extension providing serialization methods for MetadataAdditionalFieldRestriction.
///
extension MetadataAdditionalFieldRestrictionBorsh
    on MetadataAdditionalFieldRestriction {
  /// Converts the enum to a byte representation.
  void toBorsh(BinaryWriter writer) {
    if (this is Includes) {
      final v = this as Includes;

      writer.writeArray<String>(v.value0, (String item) {
        writer.writeString(item);
        ;
      });
    }
    if (this is Excludes) {
      final v = this as Excludes;

      writer.writeArray<String>(v.value0, (String item) {
        writer.writeString(item);
        ;
      });
    }
  }

  /// Creates an enum from a byte representation.
  static MetadataAdditionalFieldRestriction fromBorsh(BinaryReader reader) {
    final variant = reader.readU8();
    switch (variant) {
      case 0:
        return Includes(reader.readArray(() {
          return reader.readString();
        }));
      case 1:
        return Excludes(reader.readArray(() {
          return reader.readString();
        }));
      default:
        throw Exception(
            'Unknown metadataAdditionalFieldRestriction variant: $variant');
    }
  }
}
